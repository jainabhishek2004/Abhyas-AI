generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
   id         String @id @default(uuid())

  username    String       @unique
  email       String       @unique
  mobile      String
  dob         String
  topics      Topic[]
}

model Topic {
  id        String     @id @default(uuid())
  userId    String
  title     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  resources Resource[]
}

enum ResourceType {
  ARTICLE
  VIDEO
  PDF
}

model Resource {
  id        String     @id @default(uuid())
  topicId   String
  title     String
  type      ResourceType
  url       String
  summary   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  topic     Topic      @relation(fields: [topicId], references: [id],onDelete: Cascade)
  quizzes   Quiz[]
}

model Quiz {
  id          String       @id @default(uuid())
  resourceId  String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  resource    Resource     @relation(fields: [resourceId], references: [id],onDelete: Cascade)
  quizQAs     QuizQA[]
  quizResults QuizResult[]
}

model QuizQA {
  id            String   @id @default(uuid())
  quizId        String
  question      String
  options       String[]
  correctAnswer String
  explanation   String?
  quiz          Quiz     @relation(fields: [quizId], references: [id],onDelete: Cascade)
}

model QuizResult {
  id        String   @id @default(uuid())
  quizId    String
  score     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quiz      Quiz     @relation(fields: [quizId], references: [id],onDelete: Cascade)
}
